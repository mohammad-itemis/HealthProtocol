package HealthProtocol.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_EvaluationEntry;
  private ConceptPresentation props_InputSpec;
  private ConceptPresentation props_Measurement;
  private ConceptPresentation props_ProtocolUK;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.EvaluationEntry:
        if (props_EvaluationEntry == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("EvaluationEntry");
          props_EvaluationEntry = cpb.create();
        }
        return props_EvaluationEntry;
      case LanguageConceptSwitch.InputSpec:
        if (props_InputSpec == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("InputSpec");
          props_InputSpec = cpb.create();
        }
        return props_InputSpec;
      case LanguageConceptSwitch.Measurement:
        if (props_Measurement == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Measurement = cpb.create();
        }
        return props_Measurement;
      case LanguageConceptSwitch.ProtocolUK:
        if (props_ProtocolUK == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ProtocolUK");
          props_ProtocolUK = cpb.create();
        }
        return props_ProtocolUK;
    }
    return null;
  }
}
